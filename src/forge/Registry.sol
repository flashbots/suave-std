// SPDX-License-Identifier: UNLICENSED
// DO NOT edit this file. Code generated by forge-gen.
pragma solidity ^0.8.8;

import "../suavelib/Suave.sol";
import "./Connector.sol";
import "./ConfidentialInputs.sol";
import "./SuaveAddrs.sol";

interface registryVM {
    function etch(address, bytes calldata) external;
}

library Registry {
    registryVM constant vm = registryVM(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D);

    function enable() public {
        // enable all suave libraries
        address[] memory addrList = SuaveAddrs.getSuaveAddrs();
        for (uint256 i = 0; i < addrList.length; i++) {
            // code for Forge proxy connector
            vm.etch(addrList[i], type(Connector).runtimeCode);
        }

        // enable is confidential wrapper
        vm.etch(Suave.CONFIDENTIAL_INPUTS, type(ConfidentialInputsWrapper).runtimeCode);
    }
}
