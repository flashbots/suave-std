// SPDX-License-Identifier: UNLICENSED
// DO NOT edit this file. Code generated by forge-gen.
pragma solidity ^0.8.8;

import "solady/src/utils/LibString.sol";

library BundleEncoder {
    struct BundleObj {
        uint64 blockNumber;
        uint64 minTimestamp;
        uint64 maxTimestamp;
        bytes[] txns;
    }

    function encode(BundleObj memory obj0) internal pure returns (bytes memory) {
        bytes memory body;
        body = abi.encodePacked(
            body,
            '{"jsonrpc":"2.0","method":"eth_sendBundle","params":[{   "blockNumber": "',
            LibString.toHexString(obj0.blockNumber),
            '",   "txns": ['
        );
        for (uint64 i = 0; i < obj0.txns.length; i++) {
            body = abi.encodePacked(body, '"', LibString.toHexString(obj0.txns[i]), '",');
            if (i != obj0.txns.length - 1) body = abi.encodePacked(body, ",");
        }
        body = abi.encodePacked(body, "]");
        if (obj0.minTimestamp != 0) {
            body = abi.encodePacked(body, ',"minTimestamp": "', LibString.toString(obj0.minTimestamp), '"');
        }
        if (obj0.maxTimestamp != 0) {
            body = abi.encodePacked(body, ',"maxTimestamp": "', LibString.toString(obj0.maxTimestamp), '"');
        }
        body = abi.encodePacked(body, '}],"id":1}');
        return body;
    }
}
